<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Politiegeweld Advies Chatbot</title>
    <style>
        /* Algemene stijlen */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            background-color: #1a3a6b;
            color: white;
            padding: 1rem 0;
            text-align: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        h1 {
            margin-bottom: 0.5rem;
        }
        
        .intro {
            text-align: center;
            margin: 2rem 0;
            padding: 0 1rem;
        }
        
        /* Chatbot stijlen */
        .chatbot-container {
            max-width: 800px;
            margin: 0 auto;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .chat-header {
            background-color: #1a3a6b;
            color: white;
            padding: 15px;
            text-align: center;
            font-weight: bold;
        }
        
        .chat-messages {
            height: 400px;
            overflow-y: auto;
            padding: 15px;
            display: flex;
            flex-direction: column;
        }
        
        .message {
            max-width: 80%;
            padding: 10px 15px;
            margin-bottom: 15px;
            border-radius: 18px;
            line-height: 1.4;
            position: relative;
        }
        
        .bot-message {
            align-self: flex-start;
            background-color: #e9ecef;
            border-bottom-left-radius: 5px;
        }
        
        .user-message {
            align-self: flex-end;
            background-color: #1a3a6b;
            color: white;
            border-bottom-right-radius: 5px;
        }
        
        .chat-input {
            display: flex;
            padding: 15px;
            border-top: 1px solid #eee;
        }
        
        .chat-input input {
            flex: 1;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 30px;
            outline: none;
            font-size: 16px;
        }
        
        .chat-input button {
            background-color: #1a3a6b;
            color: white;
            border: none;
            border-radius: 30px;
            padding: 10px 20px;
            margin-left: 10px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        
        .chat-input button:hover {
            background-color: #0d2a52;
        }
        
        .quick-actions {
            display: flex;
            flex-wrap: wrap;
            padding: 10px 15px;
            border-top: 1px solid #eee;
        }
        
        .quick-action {
            background-color: #f0f4f8;
            border: 1px solid #d0d7de;
            border-radius: 20px;
            padding: 8px 15px;
            margin: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s;
        }
        
        .quick-action:hover {
            background-color: #e1e7ed;
        }
        
        .typing-indicator {
            display: inline-block;
            padding: 10px 15px;
            background-color: #e9ecef;
            border-radius: 18px;
            border-bottom-left-radius: 5px;
            align-self: flex-start;
        }
        
        .typing-dots {
            display: inline-block;
        }
        
        .typing-dots span {
            height: 8px;
            width: 8px;
            background-color: #6c757d;
            border-radius: 50%;
            display: inline-block;
            margin: 0 2px;
            animation: typing 1.4s infinite ease-in-out;
        }
        
        .typing-dots span:nth-child(1) {
            animation-delay: 0s;
        }
        
        .typing-dots span:nth-child(2) {
            animation-delay: 0.2s;
        }
        
        .typing-dots span:nth-child(3) {
            animation-delay: 0.4s;
        }
        
        @keyframes typing {
            0%, 60%, 100% {
                transform: translateY(0);
            }
            30% {
                transform: translateY(-5px);
            }
        }
        
        footer {
            text-align: center;
            margin-top: 2rem;
            padding: 1rem;
            color: #666;
            font-size: 0.9rem;
        }
        
        /* Responsive aanpassingen */
        @media (max-width: 768px) {
            .chat-messages {
                height: 300px;
            }
            
            .message {
                max-width: 90%;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <h1>Politiegeweld Advies Chatbot</h1>
            <p>Vraag advies over uw rechten en de te volgen stappen</p>
        </div>
    </header>
    
    <div class="container">
        <div class="intro">
            <h2>Welkom bij de Politiegeweld Advies Chatbot</h2>
            <p>Deze chatbot kan u adviseren over uw rechten, de te volgen stappen bij politiegeweld, en verwijzen naar relevante wetgeving en rechterlijke uitspraken.</p>
        </div>
        
        <div class="chatbot-container">
            <div class="chat-header">
                Politiegeweld Advies Chatbot
            </div>
            
            <div class="chat-messages" id="chatMessages">
                <!-- Berichten worden hier dynamisch toegevoegd -->
            </div>
            
            <div class="quick-actions" id="quickActions">
                <!-- Snelle actie knoppen worden hier dynamisch toegevoegd -->
            </div>
            
            <div class="chat-input">
                <input type="text" id="userInput" placeholder="Stel uw vraag hier...">
                <button id="sendButton">Versturen</button>
            </div>
        </div>
    </div>
    
    <footer>
        <div class="container">
            <p>Deze chatbot biedt algemeen advies en is geen vervanging voor juridisch advies van een professional.</p>
            <p>Voor dringende zaken, neem direct contact op met een juridisch adviseur.</p>
        </div>
    </footer>

    <script>
        // Chatbot data en logica
        const chatbotData = {
            begroeting: "Hallo! Ik ben de Politiegeweld Advies Chatbot. Ik kan u informatie geven over uw rechten, de te volgen stappen bij politiegeweld, en verwijzen naar relevante wetgeving. Hoe kan ik u helpen?",
            
            stappen: {
                titel: "Stappenplan bij politiegeweld",
                stappen: [
                    "1. Zorg eerst voor uw veiligheid en die van anderen",
                    "2. Documenteer het incident: noteer tijd, plaats, betrokken politieagenten (kenmerken en badge-nummers)",
                    "3. Verzamel bewijsmateriaal: foto's, video's, getuigenverklaringen, medische rapporten",
                    "4. Doe direct een melding op ons actieplatform via de kaartfunctie",
                    "5. Lever daarna de bewijzen aan via het formulier op onze website",
                    "6. Overweeg een klacht in te dienen bij de politie zelf of bij de nationale ombudsman",
                    "7. Raadpleeg eventueel een juridisch adviseur voor verdere stappen"
                ],
                afsluiting: "Het is belangrijk om snel te handelen en bewijsmateriaal te verzamelen."
            },
            
            rechten: {
                titel: "Uw rechten bij politiecontrole",
                rechten: [
                    "Recht op kennisgeving van de reden van aanhouding",
                    "Recht om te weten of u vrij bent om te gaan",
                    "Recht op een advocaat",
                    "Recht om te zwijgen",
                    "Recht op medische hulp indien nodig",
                    "Recht op een tolk als u de taal niet spreekt"
                ],
                afsluiting: "Onthoud dat politiegeweld nooit gerechtvaardigd is, behalve in geval van wettelijke uitzonderingen zoals noodweer."
            },
            
            wetgeving: {
                titel: "Relevante wetgeving",
                wetten: [
                    "Artikel 5 EVRM: Recht op vrijheid en veiligheid",
                    "Artikel 3 EVRM: Verbod van foltering en onmenselijke behandeling",
                    "Artikel 2 Wetboek van Strafrecht: Strafbaarheid van ambtsmisbruik",
                    "Politiewet 2012: Regels voor politieoptreden",
                    "Ambtsinstructie voor politieambtenaren"
                ],
                afsluiting: "Deze wetten bieden bescherming tegen misbruik van politiebevoegdheden."
            },
            
            uitspraken: {
                titel: "Belangrijke rechterlijke uitspraken",
                uitspraken: [
                    "HR 10 juli 2018: Over proportionaliteit van politiegeweld",
                    "Rb. Rotterdam 15 maart 2019: Over het recht op documentatie van geweld",
                    "Hof Amsterdam 22 november 2020: Over aansprakelijkheid bij excessief geweld",
                    "ECHR 12 januari 2021 (zaak X vs. Nederland): Over schending van artikel 3 EVRM"
                ],
                afsluiting: "Deze uitspraken helpen bij het vaststellen van normen voor politiegedrag."
            },
            
            verdereHulp: {
                titel: "Verdere hulp en ondersteuning",
                opties: [
                    "Juridische bijstand: Neem contact op met het Juridisch Loket",
                    "Slachtofferhulp: Slachtofferhulp Nederland biedt ondersteuning",
                    "Meldpunt Discriminatie: Voor gevallen van discriminatie",
                    "Nationale Ombudsman: Voor klachten over overheidsinstanties"
                ],
                afsluiting: "U staat er niet alleen voor. Er zijn verschillende organisaties die u kunnen helpen."
            },
            
            onbekend: "Ik begrijp uw vraag niet helemaal. Kunt u het anders formuleren? U kunt ook een van de onderstaande opties selecteren voor specifiek advies."
        };

        // DOM elementen
        const chatMessages = document.getElementById('chatMessages');
        const userInput = document.getElementById('userInput');
        const sendButton = document.getElementById('sendButton');
        const quickActions = document.getElementById('quickActions');

        // Toon begroeting bij het laden
        window.addEventListener('DOMContentLoaded', () => {
            addMessage(chatbotData.begroeting, 'bot');
            showQuickActions();
        });

        // Functie om bericht toe te voegen
        function addMessage(text, sender) {
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('message');
            messageDiv.classList.add(sender === 'user' ? 'user-message' : 'bot-message');
            messageDiv.textContent = text;
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Functie om type-indicator te tonen
        function showTypingIndicator() {
            const typingDiv = document.createElement('div');
            typingDiv.classList.add('typing-indicator');
            typingDiv.innerHTML = '<div class="typing-dots"><span></span><span></span><span></span></div>';
            typingDiv.id = 'typingIndicator';
            chatMessages.appendChild(typingDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Functie om type-indicator te verbergen
        function hideTypingIndicator() {
            const typingIndicator = document.getElementById('typingIndicator');
            if (typingIndicator) {
                typingIndicator.remove();
            }
        }

        // Functie om snelle acties te tonen
        function showQuickActions() {
            quickActions.innerHTML = '';
            const actions = [
                { text: 'Stappenplan bij politiegeweld', keyword: 'stappen' },
                { text: 'Mijn rechten', keyword: 'rechten' },
                { text: 'Relevante wetgeving', keyword: 'wetgeving' },
                { text: 'Rechterlijke uitspraken', keyword: 'uitspraken' },
                { text: 'Verdere hulp', keyword: 'hulp' }
            ];
            
            actions.forEach(action => {
                const actionButton = document.createElement('div');
                actionButton.classList.add('quick-action');
                actionButton.textContent = action.text;
                actionButton.addEventListener('click', () => {
                    userInput.value = action.keyword;
                    handleUserInput();
                });
                quickActions.appendChild(actionButton);
            });
        }

        // Functie om gebruikersinvoer te verwerken
        function handleUserInput() {
            const input = userInput.value.trim().toLowerCase();
            if (input === '') return;
            
            addMessage(input, 'user');
            userInput.value = '';
            
            showTypingIndicator();
            
            // Simuleer verwerkingstijd
            setTimeout(() => {
                hideTypingIndicator();
                let response = chatbotData.onbekend;
                
                if (input.includes('stap') || input.includes('doen') || input.includes('melden')) {
                    response = formatResponse(chatbotData.stappen);
                } else if (input.includes('recht') || input.includes('mag') || input.includes('toegestaan')) {
                    response = formatResponse(chatbotData.rechten);
                } else if (input.includes('wet') || input.includes('regel') || input.includes('wetten')) {
                    response = formatResponse(chatbotData.wetgeving);
                } else if (input.includes('uitspraak') || input.includes('rechter') || input.includes('zaak')) {
                    response = formatResponse(chatbotData.uitspraken);
                } else if (input.includes('hulp') || input.includes('ondersteuning') || input.includes('advocaat')) {
                    response = formatResponse(chatbotData.verdereHulp);
                } else if (input.includes('hallo') || input.includes('hoi') || input.includes('dag')) {
                    response = chatbotData.begroeting;
                }
                
                addMessage(response, 'bot');
            }, 1000);
        }

        // Functie om gestructureerde responses te formatteren
        function formatResponse(data) {
            let response = `**${data.titel}**\n\n`;
            
            if (data.stappen) {
                data.stappen.forEach(stap => {
                    response += `${stap}\n`;
                });
            } else if (data.rechten) {
                data.rechten.forEach(recht => {
                    response += `${recht}\n`;
                });
            } else if (data.wetten) {
                data.wetten.forEach(wet => {
                    response += `${wet}\n`;
                });
            } else if (data.uitspraken) {
                data.uitspraken.forEach(uitspraak => {
                    response += `${uitspraak}\n`;
                });
            } else if (data.opties) {
                data.opties.forEach(optie => {
                    response += `${optie}\n`;
                });
            }
            
            response += `\n${data.afsluiting}`;
            return response;
        }

        // Event listeners
        sendButton.addEventListener('click', handleUserInput);
        
        userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                handleUserInput();
            }
        });
    </script>
</body>
</html>
